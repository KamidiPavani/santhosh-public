/**
     * @Route("/test", name="test")
     */
    public function index(Request $request): Response
    {
        $request = json_decode($request->getContent(),true);
        $response = [];
        $is_valid_input = $this->validateRFNSAData($request);
        if(!$is_valid_input){
            echo "Error in Input Validation";
        }
        $index = 0;
        foreach($request['sectors'] as $sector) {
            if($sector['type'] == 'existing') {
                $this->existingSectors($sector, $index, $response);
            }
            if($sector['type'] == 'proposed') {
                $this->proposedSectors($sector, $index, $response);
            }
            $index++;
        }
        return $this->json($response);
        
    }



    public function existingSectors(&$sector, &$index, &$response){
        $response[$index]['sector_name'] = $sector['sector_name'];

        $no_of_tus = 0;
        foreach($sector['antenna_info'][0]['no_of_tus'] as $tus_count){
            $no_of_tus += $tus_count;
        }
        foreach($sector['list_info'] as $list_infor){

            /* Existing Connector Loss Calculation */
            $loop = 0;
            foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::EXIST_CONNECTOR_LOSS][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::EXIST_CONNECTOR_LOSS][$loop][Constants::EXIST_CONNECTOR_LOSS] = $this->ConnectorLossCalculator($dev['name'],$sector['list_info'],$response); 
                    $loop++;
            }

            /* Existing System Loss Calculation */
            $loop = 0;
            foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::EXIST_EXISTING_SYS_LOSS][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::EXIST_EXISTING_SYS_LOSS][$loop][Constants::EXIST_EXISTING_SYS_LOSS] = $dev['value'];
                    $loop++;
            }
            
            /* Existing Power At The Input of Antenna Calculation */
            $loop = 0;
            foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::EXIST_POWER_AT_THE_INPUT_OF_ANTENNA][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::EXIST_POWER_AT_THE_INPUT_OF_ANTENNA][$loop][Constants::EXIST_POWER_AT_THE_INPUT_OF_ANTENNA] = 200;
                    $loop++;
            }
            
            /* Existing Antenna Gain dBi */
             $EIRP = [];
             $loop = 0;
             foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::EXIST_ANTENNA_GAIN_DBI][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::EXIST_ANTENNA_GAIN_DBI][$loop][Constants::EXIST_ANTENNA_GAIN_DBI] = 100;
                    $loop++;
             }


            /* Existing EIRP Calculation */
            $loop = 0;
            foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::EXIST_EIRP][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::EXIST_EIRP][$loop][Constants::EXIST_EIRP] =  $this->ExistingEIRPCalculator($dev['name'],$sector['list_info'],$response); 
                    $loop++;
            }
      }
    }



    public function proposedSectors(&$sector, &$index, &$response){
        $response[$index]['sector_name'] = $sector['sector_name'];
      
        $no_of_tus = 0;
        foreach($sector['antenna_info'][0]['no_of_tus'] as $tus_count){
            $no_of_tus += $tus_count;
        }
        foreach($sector['list_info'] as $list_infor){
            // $response[$index]['list_info']['tus'] = $list_infor['tus'];

            /* Proposed Connector Loss Calculation */
            $loop = 0;
            foreach($list_infor['tus'] as $dev){
                $response[$index]['list_info'][Constants::PROPOSED_CONNECTOR_LOSS][$loop][$dev['name']] = $dev['value'];
                $response[$index]['list_info'][Constants::PROPOSED_CONNECTOR_LOSS][$loop][Constants::PROPOSED_CONNECTOR_LOSS] = $dev['value'];
                $loop++;
            }

            /* Proposed DL SYS Loss Calculation */
            $loop = 0;
            foreach($list_infor['tus'] as $dev){
                $response[$index]['list_info'][Constants::PROPOSED_DL_SYS_LOSS][$loop][$dev['name']] = $dev['value'];
                $response[$index]['list_info'][Constants::PROPOSED_DL_SYS_LOSS][$loop][Constants::PROPOSED_DL_SYS_LOSS] = $dev['value'];
                $loop++;
            }

            /* Proposed UL SYS Loss Calculation */
            $loop = 0;
            foreach($list_infor['tus'] as $dev){
                $response[$index]['list_info'][Constants::PROPOSED_UL_SYS_LOSS][$loop][$dev['name']] = $dev['value'];
                $response[$index]['list_info'][Constants::PROPOSED_UL_SYS_LOSS][$loop][Constants::PROPOSED_UL_SYS_LOSS] = $dev['value'];
                $loop++;
            }

            /* PROPOSED_RX_ATT_SETTING Calculation */
            $loop = 0;
            foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::PROPOSED_RX_ATT_SETTING][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::PROPOSED_RX_ATT_SETTING][$loop][Constants::PROPOSED_RX_ATT_SETTING] = $dev['value'];
                    $loop++;
            }
            
             /* PROPOSED_EXIST_SYS_LOSS Calculation */
             $loop = 0;
             foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::PROPOSED_EXIST_SYS_LOSS][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::PROPOSED_EXIST_SYS_LOSS][$loop][Constants::PROPOSED_EXIST_SYS_LOSS] = $dev['value'];
                    $loop++;
             }
              /* PROPOSED_SYS_LOSS_DELTA Calculation */
              $loop = 0;
              foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::PROPOSED_SYS_LOSS_DELTA][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::PROPOSED_SYS_LOSS_DELTA][$loop][Constants::PROPOSED_SYS_LOSS_DELTA] = $dev['value'];
                    $loop++;
              }
            
              /* PROPOSED_EXISTING_ANTENNA_GAIN Calculation */
              $loop = 0;
              foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::PROPOSED_EXISTING_ANTENNA_GAIN][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::PROPOSED_EXISTING_ANTENNA_GAIN][$loop][Constants::PROPOSED_EXISTING_ANTENNA_GAIN] = $dev['value'];
                    $loop++;
              }

              /* PROPOSED_ANTENNA_SYS_LOSS Calculation */
              $loop = 0;
              foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::PROPOSED_ANTENNA_SYS_LOSS][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::PROPOSED_ANTENNA_SYS_LOSS][$loop][Constants::PROPOSED_ANTENNA_SYS_LOSS] = $dev['value'];
                    $loop++;
              }

              /* PROPOSED_TOTAL_RACK_TO_POWER Calculation */
              $loop = 0;
              foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::PROPOSED_TOTAL_RACK_TO_POWER][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::PROPOSED_TOTAL_RACK_TO_POWER][$loop][Constants::PROPOSED_TOTAL_RACK_TO_POWER] = $dev['value'];
                    $loop++;
              }

              /* PROPOSED_POWER_AT_INPUT Calculation */
              $loop = 0;
              foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::PROPOSED_POWER_AT_INPUT][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::PROPOSED_POWER_AT_INPUT][$loop][Constants::PROPOSED_POWER_AT_INPUT] = $dev['value'];
                    $loop++;
              }

            /* PROPOSED_EIRP Calculation */
              $loop = 0;
              foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::PROPOSED_EIRP][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::PROPOSED_EIRP][$loop][Constants::PROPOSED_EIRP] = $dev['value'];
                    $loop++;
              }

            /* PROPOSED_EIRP_DELTA Calculation */
            $loop = 0;
            foreach($list_infor['tus'] as $dev){
                $response[$index]['list_info'][Constants::PROPOSED_EIRP_DELTA][$loop][$dev['name']] = $dev['value'];
                $response[$index]['list_info'][Constants::PROPOSED_EIRP_DELTA][$loop][Constants::PROPOSED_EIRP_DELTA] = $dev['value'];
                $loop++;
            }

            /* PROPOSED_ANTENNA_GAIN_DBI Calculation */
            $loop = 0;
            foreach($list_infor['tus'] as $dev){
                    $response[$index]['list_info'][Constants::PROPOSED_ANTENNA_GAIN_DBI][$loop][$dev['name']] = $dev['value'];
                    $response[$index]['list_info'][Constants::PROPOSED_ANTENNA_GAIN_DBI][$loop][Constants::PROPOSED_ANTENNA_GAIN_DBI] = $dev['value'];
                    $loop++;
            }
      }
    }
